<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Untitled Document</title>
</head>
<body>
<canvas id="ctx" width="800" height="800" style="z-index:2"></canvas>
<script>

var cv = document.getElementById("ctx");
var ctx = cv.getContext('2d');
	
var actionList = ["Jump", "Right", "Left", "Attack", "Duck", "Stand"];
var transitionList = ["Space Bar", "W", "S", "A", "D"];
var states = [];
var stateCurrent = null;

var xCoord = 100;
var yCoord = 100;
var startX = 0;
var startY = 0;

var stateStandObj = {
	posY: 0,
	posX:  0,
	aproxWidth: 99,
	aproxHeigth: 99,
	radius: 50,
	startAngle: ((Math.PI/180)*0, (Math.PI/180)*360), 
	clicked: false	
}

var stateJumpObj = {
	posY: 0,
	posX:  0,
	aproxWidth: 99,
	aproxHeigth: 99,
	radius: 50,
	startAngle: ((Math.PI/180)*0, (Math.PI/180)*360), 
	clicked: false	
}

var stateLeftObj = {
	posY: 0,
	posX:  0,
	aproxWidth: 99,
	aproxHeigth: 99,
	radius: 50,
	startAngle: ((Math.PI/180)*0, (Math.PI/180)*360), 
	clicked: false	
}

var stateRightObj = {
	posY: 0,
	posX:  0,
	aproxWidth: 99,
	aproxHeigth: 99,
	radius: 50,
	startAngle: ((Math.PI/180)*0, (Math.PI/180)*360), 
	clicked: false	
}

var stateAttackObj = {
	posY: 0,
	posX:  0,
	aproxWidth: 99,
	aproxHeigth: 99,
	radius: 50,
	startAngle: ((Math.PI/180)*0, (Math.PI/180)*360), 
	clicked: false	
}

var stateDuckObj = {
	posY: 0,
	posX:  0,
	aproxWidth: 99,
	aproxHeigth: 99,
	radius: 50,
	startAngle: ((Math.PI/180)*0, (Math.PI/180)*360), 
	clicked: false	
}

window.onload = function (){
	states.push(stateJumpObj);
	states.push(stateRightObj);
	states.push(stateLeftObj);
	states.push(stateAttackObj);
	states.push(stateDuckObj);
	states.push(stateStandObj);
	
	render();
	
	cv.onmousedown = function(event) {
		for (var i= 0; i< states.length; i++){	
			if ( (event.clientY > states[i].posY-42 && event.clientY < (states[i].posY+states[i].aproxHeigth-42)) 
			&& (event.clientX > states[i].posX-42 && event.clientX < (states[i].posX+states[i].aproxWidth-42)) ){
				states[i].clicked = true;
				stateCurrent = states[i];
				startX = event.clientX - states[i].posX;
				startY = event.clientY - states[i].posY;
			}
		}
	};

	cv.onmousemove = function (event) {
		if (stateCurrent != null){
			stateCurrent.posX = event.clientX - startX;
    		stateCurrent.posY = event.clientY - startY;
			ctx.clearRect(0,0,800,800);
			render2();
		}
	};

	cv.onmouseup = function (event){
		stateCurrent = null;	
		for (var i = 0; i < actionList.length; i++){
			states[i].clicked = false;	
		}
	};
}

function update()
{

}
function render()
{
	//Clickable Actions and Transitions
	ctx.font = "25px arial"
	for(i = 0; i < actionList.length; i++)
	{
		states[i].posX = xCoord;
		states[i].posY = yCoord;
		//circles
		ctx.beginPath();
		ctx.arc(states[i].posX, states[i].posY, states[i].radius, states[i].startAngle , false);
		ctx.stroke();
		ctx.closePath();
		//names
		ctx.fillStyle = 'black';
		ctx.fillText(actionList[i], states[i].posX-35, states[i].posY);
		yCoord += 110;
	}
	yCoord = 100;
	xCoord = 100;
}

function render2(){
	ctx.font = "25px arial"
	for(i = 0; i < actionList.length; i++)
	{
		//circles
		ctx.beginPath();
		ctx.arc(states[i].posX, states[i].posY, states[i].radius, states[i].startAngle , false);
		ctx.stroke();
		ctx.closePath();
		
		//names
		ctx.fillStyle = 'black';
		ctx.fillText(actionList[i], states[i].posX-35, states[i].posY);
	}
}

</script>
</body>
</html>
